{"version":3,"sources":["pages/Home/Home.js","pages/Howto/Howto.js","pages/CreateGame/CreateGame.js","pages/Rules/Rules.js","components/Navigation.js","components/NavigationAutres.js","pages/Login/Login.js","pages/Jeu/Jeu.js","pages/Signin/Signin.js","components/NavigationHisto.js","pages/Profil/Historique.js","components/NavigationProfil.js","pages/Profil/Profil.js","components/Carte.js","pages/Game/Game.js","App.js","img/bg_dark.webp","index.js"],"names":["Home","props","state","gameCode","gameFromCode","pseudo","pool","undefined","joinedGame","lobby","playerToken","handleSubmit","bind","fetch","then","response","json","setState","event","a","preventDefault","this","localStorage","setItem","gameId","getItem","item","index","currPlayers","maxPlayers","removeItem","alert","method","headers","Accept","body","JSON","stringify","token","itemsToPush","push","Row","Button","variant","onClick","handleJoin","size","handleRefreshGames","user","handleLeave","handleRefresh","Container","fluid","Col","style","border","borderRadius","backgroundColor","renderLobby","renderLobbyOwner","OnClick","onSubmit","type","value","onChange","text","target","renderGameChoices","React","Component","Howto","options","label","CreateGame","handleCreate","isIn","putPlayerInLobby","console","log","Rules","Navigation","pageSwitch","actualPage","createGame","name","actionSwitchPage","handleClick","connected","connectedAsGuest","guestPseudo","handleLoginGuest","catch","error","window","location","href","id","md","to","exact","className","activeClassName","fontSize","textAlign","sm","lg","height","display","margin","ButtonGroup","vertical","center","NavigationAutres","Signin","email","password","bdd","emailsPassbdd","passwordtest","i","length","Email","Password","require","compare","err","res","message","Pseudo","class","color","marginTop","marginLeft","marginRight","Jeu","surname","birthDate","confirmPassword","gameCount","testsign","includes","match","toLowerCase","secureTextEntry","NavigationHisto","Historique","donnees","map","l","Date","Position","NavigationProfil","Profil","donneesprofil","donneesstats","gameAmount","wins","playerWins","Name","Surname","toFixed","Carte","imageClick","identity","src","num","alt","action","Game","selectedCard","switcher","errorMessage","title","testChgPile","testChgPile2","playersData","data","players","player1","cards","set","player2","player3","player4","player5","defStyle","justifyContent","alignItems","cardStyle","pile","playerCard","cardList","ace","two","three","four","five","six","seven","eight","nine","ten","jack","queen","king","whatCardIs","indexOf","String","ninr","isRoundOver","cardsNum","showCard","card","concat","splice","generatePlayersData","p1","p2","p3","p4","p5","key","dataf","split","resetError","pileTypeCard","numPile","Number","sameSelectedCard","selCard","len","prev","actual","canHePlay","actualPile","ssc","ptc","delSelectedCard","changePile","newCards","newCardsNum","sheesh","fetchmsg","playButton","isThereErrorMessage","Alert","Heading","onClose","dismissible","isThere4Players","isThere5Players","userCard","addusercard","usercard","closeAlert","showAlert","forEach","passerelle","Ncards","block","disabled","App","pageStateSwitch","page","path","Login","ReactDOM","render","backgroundImage","background","backgroundPosition","backgroundRepeat","document","getElementById"],"mappings":"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","file":"static/js/main.1708118f.chunk.js","sourcesContent":["import React from \"react\";\r\n//import { Component } from \"react\";\r\n\r\nimport { Button, Row, Col, Container } from 'react-bootstrap'\r\n//import App from \"../../App\";\r\n//import Profil from \"../Profil/Profil\";\r\n\r\nclass Home extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            gameCode: '',\r\n            gameFromCode: '',\r\n            pseudo: 'testPseudo',\r\n            pool: undefined,\r\n            joinedGame: undefined,\r\n            lobby: undefined,\r\n            playerToken: undefined,\r\n        }\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('http://localhost:5000/pool')\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                this.setState({ pool: json });\r\n            })\r\n\r\n    }\r\n\r\n\r\n    //handle joining with a code\r\n    async handleSubmit(event) {\r\n        event.preventDefault();\r\n        await fetch(`http://localhost:5000/game/${this.state.gameCode}`)\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                localStorage.setItem(\"joinedGame\", json[0].gameId);\r\n            })\r\n        this.setState({ gameFromCode: localStorage.getItem(\"joinedGame\") });\r\n\r\n        await fetch(`http://localhost:5000/lobby/${localStorage.getItem(\"joinedGame\")}`)\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                this.setState({ lobby: json });\r\n\r\n            })\r\n\r\n\r\n        let index = undefined;\r\n        for (let item in this.state.pool) {\r\n            if (this.state.pool[item].gameId === localStorage.getItem(\"joinedGame\")) {\r\n                index = item\r\n            }\r\n        }\r\n\r\n        if (this.state.pool[index].currPlayers >= this.state.pool[index].maxPlayers) {\r\n            localStorage.removeItem(\"joinedGame\");\r\n            this.setState({ gameFromCode: undefined });\r\n            alert('lobby is full');\r\n        }\r\n        else {\r\n            await fetch('http://localhost:5000/lobbyp', {\r\n                method: 'POST',\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    \"Acces-Control-Allow-Origin\": \"true\"\r\n                },\r\n                body: JSON.stringify({\r\n                    gameId: localStorage.getItem(\"joinedGame\"),\r\n                    pseudo: this.state.pseudo,\r\n                    token: 1,\r\n                })\r\n            })\r\n\r\n\r\n            await fetch('http://localhost:5000/icount', {\r\n                method: 'POST',\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    \"Acces-Control-Allow-Origin\": \"true\"\r\n                },\r\n                body: JSON.stringify({\r\n                    gameId: localStorage.getItem(\"joinedGame\"),\r\n                })\r\n            })\r\n\r\n\r\n            await fetch(`http://localhost:5000/token/${localStorage.getItem(\"joinedGame\")}/${this.state.pseudo}`)\r\n                .then(response => response.json())\r\n                .then(json => {\r\n                    this.setState({ playerToken: json[0].token });\r\n                })\r\n\r\n            this.setState({ joinedGame: localStorage.getItem(\"joinedGame\") });\r\n\r\n            await fetch(`http://localhost:5000/lobby/${localStorage.getItem(\"joinedGame\")}`)\r\n                .then(response => response.json())\r\n                .then(json => {\r\n                    this.setState({ lobby: json });\r\n\r\n                })\r\n        }\r\n    }\r\n\r\n    //handle joining a game\r\n    async handleJoin(gameId) {\r\n        await fetch('http://localhost:5000/lobbyp', {\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n                \"Acces-Control-Allow-Origin\": \"true\"\r\n            },\r\n            body: JSON.stringify({\r\n                gameId: gameId,\r\n                pseudo: this.state.pseudo,\r\n                token: 0,\r\n            })\r\n        });\r\n        await fetch('http://localhost:5000/icount', {\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n                \"Acces-Control-Allow-Origin\": \"true\"\r\n            },\r\n            body: JSON.stringify({\r\n                gameId: gameId,\r\n            })\r\n        });\r\n        await fetch(`http://localhost:5000/lobby/${gameId}`)\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                this.setState({ lobby: json });\r\n            })\r\n\r\n\r\n        this.setState({ playerToken: 0 });\r\n        this.setState({ joinedGame: gameId });\r\n\r\n\r\n    }\r\n    \r\n    \r\n    //handle leaving a lobby\r\n    handleLeave(gameId) {\r\n        fetch('http://localhost:5000/lobbyr', {\r\n            method: 'DELETE',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n                \"Acces-Control-Allow-Origin\": \"true\"\r\n            },\r\n            body: JSON.stringify({\r\n                gameId: gameId,\r\n                pseudo: this.state.pseudo,\r\n            })\r\n        });\r\n\r\n        fetch('http://localhost:5000/dcount', {\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n                \"Acces-Control-Allow-Origin\": \"true\"\r\n            },\r\n            body: JSON.stringify({\r\n                gameId: gameId,\r\n            })\r\n        });\r\n\r\n        this.setState({ joinedGame: undefined });\r\n    }\r\n\r\n    async handleRefresh(gameId) {\r\n        await fetch(`http://localhost:5000/lobby/${gameId}`)\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                this.setState({ lobby: json });\r\n            })\r\n    }\r\n\r\n    async handleRefreshGames() {\r\n        await fetch('http://localhost:5000/pool')\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                this.setState({ pool: json });\r\n            })\r\n    }\r\n\r\n\r\n\r\n    renderGameChoices() {\r\n        let itemsToPush = []\r\n        for (let item in this.state.pool) {\r\n            let gameId = this.state.pool[item].gameId;\r\n            if (this.state.pool[item].currPlayers >= this.state.pool[item].maxPlayers) {\r\n                itemsToPush.push(<Row><Button variant=\"danger\">Full [{this.state.pool[item].currPlayers}/{this.state.pool[item].maxPlayers}]</Button><p>{gameId}</p></Row>)\r\n            }\r\n            else {\r\n                itemsToPush.push(<Row><Button variant=\"success\" onClick={() => this.handleJoin(gameId)}>Join [{this.state.pool[item].currPlayers}/{this.state.pool[item].maxPlayers}]</Button><p>{gameId}</p></Row>)\r\n            }\r\n\r\n        }\r\n        itemsToPush.push(<Row><Button variant=\"outline-info\" size=\"lg\" onClick={() => this.handleRefreshGames()}> Refresh </Button></Row>)\r\n        return (itemsToPush);\r\n    }\r\n\r\n    renderLobby() {\r\n        let itemsToPush = []\r\n        for (let item in this.state.lobby) {\r\n            if (this.state.lobby[item].token === 1) {\r\n                itemsToPush.push(<Row><p>{this.state.lobby[item].user}</p><p>___</p><p>Owner</p></Row>)\r\n            }\r\n            else {\r\n                itemsToPush.push(<Row><p>{this.state.lobby[item].user}</p><p>___</p><p>Player</p></Row>)\r\n            }\r\n\r\n        }\r\n        itemsToPush.push(\r\n            <Row>\r\n                <Button variant=\"outline-info\" size=\"lg\" onClick={() => this.handleLeave(this.state.joinedGame)}> Leave lobby </Button>\r\n                <Button variant=\"outline-info\" size=\"lg\" onClick={() => this.handleRefresh(this.state.joinedGame)}> Refresh </Button>\r\n            </Row>\r\n\r\n        )\r\n        return (itemsToPush)\r\n    }\r\n\r\n    renderLobbyOwner() {\r\n        if (this.state.playerToken === 1) {\r\n            return (<Row><Button variant=\"outline-info\" size=\"lg\"> Start Game </Button></Row>);\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.state.joinedGame) {\r\n            return (\r\n                <Container fluid>\r\n                    <Col style={{\r\n                        border: '2px solid moccasin',\r\n                        borderRadius: '10px',\r\n                        backgroundColor: 'palegoldenrod'\r\n                    }}>\r\n                        <Row>\r\n                            <h4>Lobby: {this.state.joinedGame}</h4>\r\n                            <br />\r\n                        </Row>\r\n                        <Row>\r\n\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <h5>Players:</h5>\r\n                        </Row>\r\n\r\n                        {this.renderLobby()}\r\n                        {this.renderLobbyOwner()}\r\n\r\n                    </Col>\r\n                </Container>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <Container fluid>\r\n                    <Col style={{\r\n                        border: '2px solid moccasin',\r\n                        borderRadius: '10px',\r\n                        backgroundColor: 'palegoldenrod'\r\n                    }}>\r\n                        <Row>\r\n                            <Button\r\n                                variant=\"outline-info\"\r\n                                size=\"lg\"\r\n                                onClick={() => this.props.OnClick(\"crgame\")}\r\n                            >\r\n                                Create Game\r\n                            </Button>\r\n                           \r\n                            \r\n                            <br />\r\n                        </Row>\r\n                        <Col>\r\n                            <Row>\r\n                                <form onSubmit={this.handleSubmit}>\r\n\r\n                                    <Row>\r\n                                        <h4>Join with a code</h4>\r\n                                        <br />\r\n                                    </Row>\r\n\r\n                                    <input type=\"text\" value={this.state.gameCode} onChange={text => this.setState({ gameCode: text.target.value })} />\r\n\r\n                                    <input type=\"submit\" value=\"Enter Game\" />\r\n                                </form>\r\n                            </Row>\r\n                        </Col>\r\n                        <Row>\r\n\r\n                            <Col>\r\n                                <Row>\r\n                                    <h4>Find games</h4>\r\n                                    <br />\r\n                                </Row>\r\n                                {this.renderGameChoices()}\r\n\r\n                            </Col>\r\n\r\n                        </Row>\r\n                    </Col>\r\n                </Container>\r\n            )\r\n        }\r\n\r\n\r\n    }\r\n}\r\nexport default Home","import React from \"react\";\r\nimport { Row, Col, Container } from 'react-bootstrap'\r\n\r\nexport default function Howto(){\r\n    return (\r\n            <Container fluid>\r\n                <Col style = {{\r\n                    border: '2px solid moccasin',\r\n                    borderRadius: '10px',\r\n                    backgroundColor: 'palegoldenrod'\r\n                    }}>\r\n                    <Row>        \r\n                        <h2>How to play </h2>\r\n                    </Row>\r\n                    <Row>\r\n                        {/* Ici un composant réactif qui changera selon ce qu'on touche (Genre le home c'est la liste des games, puis lorsque l'on naviguera sur la barre \"menu\", cela changera ce qu'il y a ici.) \r\n                                    En attendant je hardcode le listing des game disponible*/}\r\n                        <Container>\r\n                            <Col>\r\n                                <Row>\r\n                                    <ul>\r\n                                    <li> Play as guest : </li><br></br>\r\n                                        <ul>\r\n                                            <li> first click on the right top button, log as guest </li>\r\n                                            <li> You can now play President Online by clicking on create a game or join a game ! </li>\r\n                                        </ul>  <br></br>                                          \r\n                                    <li> Play logged : </li><br></br>\r\n                                        <ul>\r\n                                            <li> Click on the right top button, Sign in, to create an account and fill the fields with your information </li>\r\n                                            <li> If you already have an account, click on the right top button, Log in, insert your information, and then click on the log button   </li>\r\n                                        </ul><br></br>\r\n                                    <li> Create a game : </li><br></br>\r\n                                        <ul>\r\n                                            <li> Click on the create a game button, insert the name of the lobby and select the amount of players that you want to play with </li>\r\n                                        </ul><br></br>\r\n                                    <li> Join a game : </li><br></br>\r\n                                        <ul>\r\n                                            <li> Check that the lobby is not full </li>\r\n                                            <li> If it's not, just click on the button \" join \" and you will be redirect to the lobby </li>\r\n                                        </ul><br></br>\r\n                                    <li> Join a game with friends : </li>\r\n                                        <ul><br></br>\r\n                                        <li> Every game has a code, just give this code to your friends, they insert this code and then, click on \"enter the game\"</li>\r\n                                    </ul><br></br>\r\n                                    <li> Use a card : </li>\r\n                                        <ul><br></br>\r\n                                            <li> Select the card(s) that you want to play with, then click on play </li>\r\n                                        </ul><br></br>\r\n                                    \r\n                                    </ul>\r\n                                </Row>\r\n                            </Col>\r\n                        </Container>\r\n                    </Row>\r\n                </Col>\r\n            </Container>\r\n\r\n    )\r\n}\r\n","\r\nimport React from \"react\";\r\nimport { Button, Row, Col, Container } from 'react-bootstrap'\r\nimport Select from 'react-select'\r\n\r\n\r\nconst options = [\r\n    { value: '4', label: '4' },\r\n    { value: '5', label: '5' },\r\n    { value: '6', label: '6' },\r\n\r\n]\r\n\r\n\r\nclass CreateGame extends React.Component {\r\n\r\n\r\n\r\n    // TODO : deplacer les states que ça ne fasse pas de pb de collision\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            pseudo: \"testPseudo\",\r\n            gameId: undefined,\r\n            maxPlayers: undefined,\r\n            playerToken: undefined,\r\n            lobby: undefined,\r\n            joinedGame: undefined,\r\n            pool: undefined,\r\n        }\r\n        this.handleCreate = this.handleCreate.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('http://localhost:5000/pool')\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                this.setState({ pool: json });\r\n            })\r\n\r\n    }\r\n\r\n    /* sendCards = () =>{\r\n        fetch('http://localhost:5000/deck',{\r\n             \r\n              method:'POST',\r\n              headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n                \"Access-Control-Allow-Origin\":\"true\"\r\n              },\r\n              body: JSON.stringify({\r\n                gameId:this.state.gameId,\r\n                lobby:this.state.lobby               \r\n              }),\r\n              \r\n              \r\n            }).then(response => response.json())\r\n            .then(json => {\r\n                    console.log(json.message)\r\n                \r\n        \r\n                \r\n              }).catch((error) => {\r\n               \r\n                \r\n                \r\n                alert(\"Echec sending cards\");\r\n                \r\n          });\r\n          alert(\"cards send\")\r\n          \r\n    };*/\r\n\r\n    handleCreate(event) {\r\n        event.preventDefault();\r\n        let isIn = false;\r\n        for (let item of this.state.pool) {\r\n            if (this.state.gameId === item.gameId) { isIn = true }\r\n        }\r\n\r\n\r\n        if (!isIn) {\r\n\r\n            //creating table for the game\r\n            fetch('http://localhost:5000/table', {\r\n                method: 'POST',\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    \"Acces-Control-Allow-Origin\": \"true\"\r\n                },\r\n                body: JSON.stringify({\r\n                    gameId: this.state.gameId,\r\n                }),\r\n\r\n            })\r\n\r\n            //setting the game in the game pool\r\n            fetch('http://localhost:5000/spool', {\r\n                method: 'POST',\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    \"Acces-Control-Allow-Origin\": \"true\"\r\n                },\r\n                body: JSON.stringify({\r\n                    gameId: this.state.gameId,\r\n                    maxPlayers: this.state.maxPlayers.value,\r\n                }),\r\n\r\n            })\r\n\r\n            //creates lobby for the game\r\n            fetch('http://localhost:5000/lobby', {\r\n                method: 'POST',\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    \"Acces-Control-Allow-Origin\": \"true\"\r\n                },\r\n                body: JSON.stringify({\r\n                    gameId: this.state.gameId,\r\n                }),\r\n\r\n            })\r\n\r\n            //increments player count in gamepool\r\n            fetch('http://localhost:5000/icount', {\r\n                method: 'POST',\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    \"Acces-Control-Allow-Origin\": \"true\"\r\n                },\r\n                body: JSON.stringify({\r\n                    gameId: this.state.gameId,\r\n                })\r\n            });\r\n\r\n            this.putPlayerInLobby(this.state.gameId, this.state.pseudo);\r\n            localStorage.setItem(\"gameId\", this.state.joinedGame);\r\n            localStorage.setItem(\"pseudo\", this.state.pseudo);\r\n        }\r\n        else {\r\n            alert(\"This name is already used\");\r\n        }\r\n\r\n    };\r\n\r\n    async putPlayerInLobby(gameId, pseudo) {\r\n        //puts himself in the lobby as owner\r\n        await fetch('http://localhost:5000/lobbyp', {\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n                \"Acces-Control-Allow-Origin\": \"true\"\r\n            },\r\n            body: JSON.stringify({\r\n                gameId: gameId,\r\n                pseudo: pseudo,\r\n                token: 1,\r\n            })\r\n        })\r\n            .then(response => response.json())\r\n            .then(json => {\r\n\r\n\r\n            })\r\n\r\n        this.setState({ playerToken: 1 });\r\n\r\n\r\n        //fetches the lobby\r\n        await fetch(`http://localhost:5000/lobby/${gameId}`)\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                this.setState({ lobby: json });\r\n                console.log(json)\r\n            })\r\n\r\n        this.setState({ joinedGame: gameId });\r\n    }\r\n\r\n\r\n    async handleRefresh(gameId) {\r\n        await fetch(`http://localhost:5000/lobby/${gameId}`)\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                this.setState({ lobby: json });\r\n            })\r\n    }\r\n\r\n    handleLeave(gameId) {\r\n        fetch('http://localhost:5000/delete', {\r\n            method: 'DELETE',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n                \"Acces-Control-Allow-Origin\": \"true\"\r\n            },\r\n            body: JSON.stringify({\r\n                gameId: gameId,\r\n            })\r\n        })\r\n\r\n        fetch('http://localhost:5000/delete', {\r\n            method: 'DELETE',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n                \"Acces-Control-Allow-Origin\": \"true\"\r\n            },\r\n            body: JSON.stringify({\r\n                gameId: (gameId + \"Lobby\"),\r\n            })\r\n        })\r\n\r\n        fetch('http://localhost:5000/poold', {\r\n            method: 'DELETE',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n                \"Acces-Control-Allow-Origin\": \"true\"\r\n            },\r\n            body: JSON.stringify({\r\n                gameId: (gameId),\r\n            })\r\n        })\r\n\r\n\r\n        this.setState({ joinedGame: undefined });\r\n    }\r\n\r\n    renderLobby() {\r\n        let itemsToPush = []\r\n        for (let item in this.state.lobby) {\r\n            console.log(this.state.lobby[item]);\r\n            if (this.state.lobby[item].token === 1) {\r\n                itemsToPush.push(<Row><p>{this.state.lobby[item].user}</p><p>___</p><p>Owner</p></Row>)\r\n            }\r\n            else {\r\n                itemsToPush.push(<Row><p>{this.state.lobby[item].user}</p><p>___</p><p>Player</p></Row>)\r\n            }\r\n\r\n        }\r\n        itemsToPush.push(\r\n            <Row>\r\n                <Button variant=\"outline-info\" size=\"lg\" onClick={() => this.handleLeave(this.state.joinedGame)}> Leave lobby </Button>\r\n                <Button variant=\"outline-info\" size=\"lg\" onClick={() => this.handleRefresh(this.state.joinedGame)}> Refresh </Button>\r\n            </Row>\r\n        )\r\n        return (itemsToPush)\r\n    };\r\n\r\n    renderLobbyOwner() {\r\n        if (this.state.playerToken === 1) {\r\n            return (<Row><Button variant=\"outline-info\" size=\"lg\"> Start Game </Button></Row>);\r\n        }\r\n\r\n    };\r\n\r\n    render() {\r\n        if (this.state.joinedGame) {\r\n            return (\r\n                <Container fluid>\r\n                    <Col style={{\r\n                        border: '2px solid moccasin',\r\n                        borderRadius: '10px',\r\n                        backgroundColor: 'palegoldenrod'\r\n                    }}>\r\n                        <Row>\r\n                            <h4>Lobby: {this.state.joinedGame}</h4>\r\n                            <br />\r\n                        </Row>\r\n                        <Row>\r\n\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <h5>Players:</h5>\r\n                        </Row>\r\n\r\n                        {this.renderLobby()}\r\n                        {this.renderLobbyOwner()}\r\n\r\n                    </Col>\r\n                </Container>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <Container>\r\n                    <Col style={{\r\n                        border: '2px solid moccasin',\r\n                        borderRadius: '10px',\r\n                        backgroundColor: 'palegoldenrod'\r\n                    }}>\r\n\r\n                        <Row>\r\n                            {/* Ici un composant réactif qui changera selon ce qu'on touche (Genre le home c'est la liste des games, puis lorsque l'on naviguera sur la barre \"menu\", cela changera ce qu'il y a ici.) \r\n                                            En attendant je hardcode le listing des game disponible*/}\r\n                            <Container>\r\n                                <Col>\r\n                                    <h2>Create a game</h2>\r\n                                    <br /><br />\r\n\r\n\r\n                                    <form onSubmit={this.handleCreate}>\r\n\r\n                                        <label>\r\n                                            <p>Lobby's name :</p>\r\n                                            <input type=\"text\" value={this.state.gameId} onChange={text => this.setState({ gameId: text.target.value })} />\r\n                                        </label>\r\n                                        <br /><br />\r\n\r\n                                        <label>\r\n                                            <p>Amount of player : </p>\r\n                                            <Select options={options} value={this.state.maxPlayers} onChange={value => this.setState({ maxPlayers: value })} />\r\n                                        </label>\r\n                                        <br /><br />\r\n                                        <input type=\"submit\" value=\"Create lobby\" />\r\n                                    </form>\r\n\r\n\r\n\r\n                                </Col>\r\n                            </Container>\r\n                        </Row>\r\n                    </Col>\r\n                </Container>\r\n            );\r\n        }\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default CreateGame;","import React from \"react\";\r\nimport { Row, Col, Container } from 'react-bootstrap'\r\n\r\nexport default function Rules(){\r\n    return (\r\n            <Container fluid>\r\n                            <Col style = {{\r\n                            border: '2px solid moccasin',\r\n                            borderRadius: '10px',\r\n                            backgroundColor: 'palegoldenrod'\r\n                            }}>\r\n                                <Row> \r\n                                    <h2> Rules </h2>\r\n                                </Row>\r\n                                <Row>\r\n                                {/* Ici un composant réactif qui changera selon ce qu'on touche (Genre le home c'est la liste des games, puis lorsque l'on naviguera sur la barre \"menu\", cela changera ce qu'il y a ici.) \r\n                                    En attendant je hardcode le listing des game disponible*/}\r\n                                    <Container>\r\n                                        <Col>\r\n                                            <Row>\r\n                                                <h5>General :</h5>\r\n                                                <ul>\r\n                                                    <li>\r\n                                                        All cards are dealt to the players.\r\n                                                    </li>\r\n                                                    <li>\r\n                                                        The goal is to get rid of all of your cards first.\r\n                                                    </li>\r\n                                                    <li>\r\n                                                        The person with the 3 clover begins.\r\n                                                    </li>\r\n                                                    <li>\r\n                                                        The highest card is 2, then the ace, king, queens etc ... until 3 which is the lowest card.\r\n                                                    </li>\r\n                                                    <li>\r\n                                                        Each player can put 1 to 4 cards of the same value.\r\n                                                    </li>\r\n                                                    <li>\r\n                                                        It is better for the first person to start the round that they put the smallest card.\r\n                                                    </li>\r\n                                                    <li>\r\n                                                        The next player has several options :\r\n                                                        <ul>\r\n                                                            <li>\r\n                                                                He has no higher cards or not the required number, he passes his turn,\r\n                                                            </li>\r\n                                                            <li>\r\n                                                                He has one or more higher cards and places on top of those previously played,\r\n                                                            </li>\r\n                                                            <li>\r\n                                                                He has one or more cards of the same value and places them on top, thus skipping the next player's turn.\r\n                                                            </li>\r\n                                                        </ul>\r\n                                                    </li>\r\n                                                    <li>\r\n                                                        The turn ends when no more player can place a card, the last player to have deposited one begins the next turn.\r\n                                                    </li>\r\n                                                    <li>\r\n                                                        To win, you just need to be the first to run out of cards. When this happens, the game must continue until there is only one player left with cards.\r\n                                                    </li> <br></br>\r\n                                                </ul>\r\n                                                <h5>Thus the naming of the players can begin :</h5><br></br>\r\n                                                <ul>\r\n                                                    <li>\r\n                                                        The first to finish becomes the \"President\",\r\n                                                    </li>\r\n                                                    <li>\r\n                                                        The second becomes the \"Vice President\",\r\n                                                    </li>\r\n                                                    <li>\r\n                                                        The penultimate becomes the \"Vice Beggar\",\r\n                                                    </li>\r\n                                                    <li>\r\n                                                        And finally the last becomes the \"Beggar\".\r\n                                                    </li>\r\n                                                    <li>\r\n                                                        Between the second and the penultimate, if there are players, they will be called the \"Neutrals\".\r\n                                                    </li>\r\n                                                </ul>\r\n                                                <h5>The advantage of naming players :</h5>\r\n                                                <ul>\r\n                                                    <li>\r\n                                                        During the next game, the beggar will have to give his 2 best cards to the President, and in exchange, he will have to give 2 cards of his choice to the beggar.\r\n                                                    </li>\r\n                                                    <li>\r\n                                                        Ditto for the vice beggar and president, except that only one card is exchanged.\r\n                                                    </li>\r\n                                                    <li>\r\n                                                        When a round is over (and there is a new president, beggar etc), the beggar starts the next round.\r\n                                                    </li>\r\n                                                </ul>\r\n                                            </Row>\r\n                                        </Col>\r\n                                    </Container>\r\n                                </Row>\r\n                            </Col>\r\n                       </Container>\r\n\r\n\r\n    )\r\n}","import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { ButtonGroup, Button, Row, Col, Container } from 'react-bootstrap';\r\nimport Home from '../pages/Home/Home';\r\nimport Howto from '../pages/Howto/Howto'; \r\nimport CreateGame from '../pages/CreateGame/CreateGame';\r\nimport Rules from '../pages/Rules/Rules';\r\n//import Login from '../pages/Login/Login'\r\n\r\nclass Navigation extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n           connected: localStorage.getItem('Connect'),\r\n           connectedAsGuest: localStorage.getItem('ConnectedAsGuest'),\r\n           guestPseudo : '',\r\n           \r\n        \r\n        \r\n           } \r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.handleLoginGuest = this.handleLoginGuest.bind(this);\r\n        \r\n      }\r\n    \r\n\r\n    pageSwitch= () => {\r\n\r\n        const actualPage = this.props.actualPage;\r\n        switch(actualPage){\r\n            \r\n            case 'howto':\r\n                return <Howto/>;\r\n            case 'rules':\r\n                return <Rules/>;\r\n            case 'crgame':\r\n                return <CreateGame/>;\r\n            default :\r\n                return <Home OnClick = {this.createGame}/>;\r\n        }\r\n      }\r\n\r\n    createGame = (name) => {\r\n        this.props.actionSwitchPage(name);\r\n    }\r\n\r\n\r\n    handleClick=() => {\r\n        this.setState({connected: false})\r\n        localStorage.setItem('Connect', false)\r\n        this.setState({connectedAsGuest: false})\r\n        localStorage.setItem('ConnectedAsGuest', false)\r\n        \r\n    }\r\n    \r\n\r\n    handleLoginGuest(event){\r\n        event.preventDefault();\r\n        localStorage.setItem('ConnectedAsGuest', true)\r\n       \r\n        fetch('http://localhost:5000/guest', {\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n                \"Acces-Control-Allow-Origin\": \"true\"\r\n            },\r\n        }).then(response => response.json())\r\n            .then(json => {\r\n                console.log(json[\"message\"]);\r\n                this.setState({guestPseudo: json[\"message\"]})\r\n                localStorage.setItem('guestPseudo',this.state.guestPseudo)\r\n                \r\n            }).catch((error) => {\r\n\r\n            });\r\n            \r\n            \r\n            \r\n            console.log(this.state.connectedAsGuest)\r\n            \r\n            //afficher en tant qu'user connecté\r\n            console.log(this.state.guestPseudo)\r\n            \r\n            window.location.href= \"https://president-online.netlify.app/\"\r\n            \r\n            \r\n    }\r\n\r\n    render() {\r\n        console.log(this.state.pseudo)\r\n        if(this.state.connected===\"true\"){\r\n            console.log(this.state.connected)\r\n            return (\r\n                <main id=\"maincomponent\">\r\n                    <Container fluid=\"lg\">\r\n                        <Row>\r\n                            <Col md=\"auto\" style={{\r\n                                border: '2px solid moccasin',\r\n                                borderRadius: '10px',\r\n                                backgroundColor: 'palegoldenrod'\r\n                            }}>\r\n                                <NavLink to=\"/\" exact className=\"hover\" activeClassName='nav-active'>\r\n                                    <h1 style={{\r\n                                        fontSize: 64,\r\n                                    }}>Président Online</h1>\r\n                                </NavLink>\r\n                            </Col>\r\n                            <Col />\r\n                            <Col />\r\n                            <Col />\r\n                            <Col md='auto'>\r\n    \r\n                                {/* On déplacera le contenu de ce container par une fonction Auth qui, lors de la connexion affichera un bouton profil */}\r\n                                <Container fluid=\"lg\" style={{\r\n                                    border: '2px solid moccasin',\r\n                                    borderRadius: '10px',\r\n                                    backgroundColor: 'palegoldenrod'\r\n                                }}>\r\n                                    <Row className=\"justify-content-md-center\">\r\n                                        <Col md={8}>\r\n                                            <h2 style={{ textAlign: \"center\", fontSize: 32 }}> Account </h2>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col sm='auto'>\r\n                                            <NavLink to=\"/profile\" className=\"hover\" activeClassName='nav-active'>\r\n                                                <h4 style={{ textAlign: \"center\", fontSize: 24 }}>Profile</h4>\r\n                                            </NavLink>\r\n                                            <Button onClick={this.handleClick}>Log out</Button>\r\n                                        </Col>\r\n                                        <Col />\r\n                                    </Row>\r\n                                </Container>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                    <br/>\r\n                    <Container fluid=\"lg\">\r\n                        <Row>\r\n                            <Col fluid=\"md\" lg={2}>\r\n                                <Container style={{\r\n                                    height: 'auto',\r\n                                }}>\r\n                                    <Col md='auto' style={{\r\n                                        border: '2px solid moccasin',\r\n                                        borderRadius: '10px',\r\n                                        backgroundColor: 'palegoldenrod',\r\n                                        height: '400px'\r\n                                    }}>\r\n                                        <Row>\r\n                                            <h2 style={{\r\n                                                display: 'block',\r\n                                                margin: 'auto'\r\n                                            }}> Menu </h2>\r\n                                        </Row>\r\n                                        <br /><br />\r\n                                        <Row className=\"justify-content-md-center\">\r\n                                            <ButtonGroup vertical center>\r\n                                                <Button\r\n                                                    variant=\"outline-info\"\r\n                                                    size=\"lg\"\r\n                                                    onClick={() => this.props.actionSwitchPage(\"home\")}\r\n                                                >Home</Button>\r\n                                                <br />\r\n                                                <Button\r\n                                                    variant=\"outline-info\"\r\n                                                    size=\"lg\"\r\n                                                    onClick={() => this.props.actionSwitchPage(\"howto\")}\r\n                                                >How to play ?</Button>\r\n                                                <br />\r\n                                                <Button\r\n                                                    variant=\"outline-info\"\r\n                                                    size=\"lg\"\r\n                                                    onClick={() => this.props.actionSwitchPage(\"rules\")}\r\n                                                >Rules</Button>\r\n                                            </ButtonGroup>\r\n                                        </Row>\r\n                                    </Col>\r\n                                </Container>\r\n                            </Col>\r\n                            <Col fluid sm='auto'>\r\n                                {this.pageSwitch()}\r\n                            </Col>\r\n                        </Row>\r\n    \r\n                    </Container>\r\n                </main>\r\n            );\r\n                                        \r\n        }\r\n\r\n        if(this.state.connectedAsGuest===\"true\"){\r\n            console.log(this.state.connectedAsGuest)\r\n            return (\r\n                <main id=\"maincomponent\">\r\n                    <Container fluid=\"lg\">\r\n                        <Row>\r\n                            <Col md=\"auto\" style={{\r\n                                border: '2px solid moccasin',\r\n                                borderRadius: '10px',\r\n                                backgroundColor: 'palegoldenrod'\r\n                            }}>\r\n                                <NavLink to=\"/\" exact className=\"hover\" activeClassName='nav-active'>\r\n                                    <h1 style={{\r\n                                        fontSize: 64,\r\n                                    }}>Président Online</h1>\r\n                                </NavLink>\r\n                            </Col>\r\n                            <Col />\r\n                            <Col />\r\n                            <Col />\r\n                            <Col md='auto'>\r\n    \r\n                                {/* On déplacera le contenu de ce container par une fonction Auth qui, lors de la connexion affichera un bouton profil */}\r\n                                <Container fluid=\"lg\" style={{\r\n                                    border: '2px solid moccasin',\r\n                                    borderRadius: '10px',\r\n                                    backgroundColor: 'palegoldenrod'\r\n                                }}>\r\n                                    \r\n                                    <Row>\r\n                                        <Col sm='auto'>\r\n                                            <Button onClick={this.handleClick}>Log out</Button>\r\n                                        </Col>\r\n                                        <Col />\r\n                                    </Row>\r\n                                </Container>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                    <br/>\r\n                    <Container fluid=\"lg\">\r\n                        <Row>\r\n                            <Col fluid=\"md\" lg={2}>\r\n                                <Container style={{\r\n                                    height: 'auto',\r\n                                }}>\r\n                                    <Col md='auto' style={{\r\n                                        border: '2px solid moccasin',\r\n                                        borderRadius: '10px',\r\n                                        backgroundColor: 'palegoldenrod',\r\n                                        height: '400px'\r\n                                    }}>\r\n                                        <Row>\r\n                                            <h2 style={{\r\n                                                display: 'block',\r\n                                                margin: 'auto'\r\n                                            }}> Menu </h2>\r\n                                        </Row>\r\n                                        <br /><br />\r\n                                        <Row className=\"justify-content-md-center\">\r\n                                            <ButtonGroup vertical center>\r\n                                                <Button\r\n                                                    variant=\"outline-info\"\r\n                                                    size=\"lg\"\r\n                                                    onClick={() => this.props.actionSwitchPage(\"home\")}\r\n                                                >Home</Button>\r\n                                                <br />\r\n                                                <Button\r\n                                                    variant=\"outline-info\"\r\n                                                    size=\"lg\"\r\n                                                    onClick={() => this.props.actionSwitchPage(\"howto\")}\r\n                                                >How to play ?</Button>\r\n                                                <br />\r\n                                                <Button\r\n                                                    variant=\"outline-info\"\r\n                                                    size=\"lg\"\r\n                                                    onClick={() => this.props.actionSwitchPage(\"rules\")}\r\n                                                >Rules</Button>\r\n                                            </ButtonGroup>\r\n                                        </Row>\r\n                                    </Col>\r\n                                </Container>\r\n                            </Col>\r\n                            <Col fluid sm='auto'>\r\n                                {this.pageSwitch()}\r\n                            </Col>\r\n                        </Row>\r\n    \r\n                    </Container>\r\n                </main>\r\n            );\r\n                                        \r\n        } \r\n\r\n    \r\n        else{\r\n            return (\r\n                <main id=\"maincomponent\">\r\n                    <Container fluid=\"lg\">\r\n                        <Row>\r\n                            <Col md=\"auto\" style={{\r\n                                border: '2px solid moccasin',\r\n                                borderRadius: '10px',\r\n                                backgroundColor: 'palegoldenrod'\r\n                            }}>\r\n                                <NavLink to=\"/\" exact className=\"hover\" activeClassName='nav-active'>\r\n                                    <h1 style={{\r\n                                        fontSize: 64,\r\n                                    }}>Président Online</h1>\r\n                                </NavLink>\r\n                            </Col>\r\n                            <Col />\r\n                            <Col />\r\n                            <Col />\r\n                            <Col md='auto'>\r\n    \r\n                                {/* On déplacera le contenu de ce container par une fonction Auth qui, lors de la connexion affichera un bouton profil */}\r\n                                <Container fluid=\"lg\" style={{\r\n                                    border: '2px solid moccasin',\r\n                                    borderRadius: '10px',\r\n                                    backgroundColor: 'palegoldenrod'\r\n                                }}>\r\n                                    \r\n                                    <Row>\r\n                                        <Col sm='auto'>\r\n                                            <NavLink to=\"/signin\" className=\"hover\" activeClassName='nav-active'>\r\n                                                <h4 style={{ textAlign: \"center\", fontSize: 24 }}>Sign In</h4>\r\n                                            </NavLink>\r\n                                        </Col>\r\n                                        <Col />\r\n                                        <Col sm='auto'>\r\n                                            <NavLink to=\"/login\" className=\"hover\" activeClassName='nav-active'>\r\n                                                <h4 style={{ textAlign: \"center\", fontSize: 24 }}>Log In</h4>\r\n                                            </NavLink>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col>\r\n                                        <Button\r\n                                            variant=\"outline-info\"\r\n                                            size=\"lg\"\r\n                                            onClick={this.handleLoginGuest}    \r\n                                        >\r\n                                            Log in as a guest\r\n                                        </Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Container>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                    <br/>\r\n                    <Container fluid=\"lg\">\r\n                        <Row>\r\n                            <Col fluid=\"md\" lg={2}>\r\n                                <Container style={{\r\n                                    height: 'auto',\r\n                                }}>\r\n                                    <Col md='auto' style={{\r\n                                        border: '2px solid moccasin',\r\n                                        borderRadius: '10px',\r\n                                        backgroundColor: 'palegoldenrod',\r\n                                        height: '400px'\r\n                                    }}>\r\n                                        <Row>\r\n                                            <h2 style={{\r\n                                                display: 'block',\r\n                                                margin: 'auto'\r\n                                            }}> Menu </h2>\r\n                                        </Row>\r\n                                        <br /><br />\r\n                                        <Row className=\"justify-content-md-center\">\r\n                                            <ButtonGroup vertical center>\r\n                                                <Button\r\n                                                    variant=\"outline-info\"\r\n                                                    size=\"lg\"\r\n                                                    onClick={() => this.props.actionSwitchPage(\"home\")}\r\n                                                >Home</Button>\r\n                                                <br />\r\n                                                <Button\r\n                                                    variant=\"outline-info\"\r\n                                                    size=\"lg\"\r\n                                                    onClick={() => this.props.actionSwitchPage(\"howto\")}\r\n                                                >How to play ?</Button>\r\n                                                <br />\r\n                                                <Button\r\n                                                    variant=\"outline-info\"\r\n                                                    size=\"lg\"\r\n                                                    onClick={() => this.props.actionSwitchPage(\"rules\")}\r\n                                                >Rules</Button>\r\n                                            </ButtonGroup>\r\n                                        </Row>\r\n                                    </Col>\r\n                                </Container>\r\n                            </Col>\r\n                            <Col fluid sm='auto'>\r\n                                {this.pageSwitch()}\r\n                            </Col>\r\n                        </Row>\r\n    \r\n                    </Container>\r\n                </main>\r\n            );\r\n        }\r\n        \r\n    };\r\n}\r\n\r\nexport default Navigation;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport \"./NavigationAutres.css\" \r\nimport Container from 'react-bootstrap/Container'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Row from 'react-bootstrap/Row'\r\n\r\n\r\n\r\nconst NavigationAutres =() => {\r\n    return (\r\n        <main>\r\n            <Container fluid=\"lg\"> \r\n                <Row>\r\n                    <Col md=\"auto\" style = {{\r\n                        border: '2px solid moccasin',\r\n                        borderRadius: '10px',\r\n                        backgroundColor: 'palegoldenrod'\r\n                        }}>\r\n                        <NavLink to=\"/\" exact className =\"hover\" activeClassName='nav-active'>\r\n                            <h1 style={{\r\n                                fontSize: 64,\r\n                                }}>Président Online</h1>\r\n                        </NavLink>\r\n                    </Col>\r\n                    <Col/>\r\n                    <Col/>\r\n                    <Col/>\r\n                </Row>\r\n            </Container>\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default NavigationAutres;","import React from \"react\";\r\nimport NavigationAutres from \"../../components/NavigationAutres\";\r\nimport Col from 'react-bootstrap/Col'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Container from 'react-bootstrap/Container'\r\n\r\nclass Signin extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n       \r\n        this.state={\r\n            email:'',\r\n            password:'',\r\n            bdd:'',\r\n            emailsPassbdd:'',\r\n            connected:false,\r\n            passwordtest:'',\r\n            \r\n   \r\n        }\r\n        \r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n      }\r\n\r\n      \r\n\r\n      \r\n\r\n      handleSubmit(event) {\r\n        event.preventDefault();\r\n        \r\n\r\n        /*let pass=this.state.password\r\n        var bcrypt = require('bcryptjs');\r\n        bcrypt.genSalt(10,function(err,salt){\r\n                bcrypt.hash(pass, salt, function(err, hash){\r\n                    console.log(hash)\r\n                })\r\n            })*/\r\n\r\n        \r\n        //console.log(this.state.email)\r\n        //console.log(typeof(this.state.email))\r\n        //console.log(this.state.emailsbdd)\r\n        //console.log(this.state.password)\r\n        //console.log(this.state.bdd)\r\n       \r\n\r\n        for (let i=0; i<this.state.bdd.length;i++){\r\n            //console.log(this.state.email)\r\n            if (this.state.email !== this.state.bdd[i].Email){\r\n                //console.log(\"unknown mail\")\r\n            }\r\n            else{\r\n                //alert(\"Mail in bdd\")\r\n                this.state.passwordtest = this.state.bdd[i].Password\r\n                /*let pass=this.state.password\r\n                var bcrypt = require('bcryptjs');\r\n                bcrypt.genSalt(10,function(err,salt){\r\n                    bcrypt.hash(pass, salt, function(err, hash){\r\n                        console.log(hash)\r\n                    })\r\n                })*/\r\n                \r\n                //console.log(this.state.password)\r\n                //console.log(this.state.bdd[i].Password)\r\n                var bcrypt = require('bcryptjs');\r\n                bcrypt.compare( this.state.password,this.state.bdd[i].Password, function(err,res){\r\n                    console.log(res)\r\n                    console.log(err)\r\n                    if(res){\r\n                        console.log(null , {message: \"logged\"});\r\n                        \r\n                        localStorage.setItem('Connect', true)\r\n                        window.location.href= \"https://president-online.netlify.app/\"\r\n                        //window.location.href= \"http://localhost:3000/\"\r\n                        }\r\n                    else{\r\n                          console.log(null , {message:'error'});\r\n                          \r\n                        } \r\n                       \r\n                })\r\n                \r\n                localStorage.setItem('Email', this.state.email)\r\n                localStorage.setItem('Pseudo', this.state.bdd[i].Pseudo)\r\n                localStorage.getItem('Connect')\r\n                /*\r\n                console.log(this.state.connected)\r\n                localStorage.setItem('Connect', true)\r\n                localStorage.setItem('Email', this.state.email)\r\n                localStorage.setItem('Pseudo', this.state.bdd[i].Pseudo)\r\n                localStorage.getItem('Connect')\r\n                window.location.href= \"http://localhost:3000/\" */\r\n            }\r\n        }\r\n      }\r\n\r\n      componentDidMount(){\r\n        localStorage.setItem('Connect',false)\r\n          fetch('http://localhost:5000/loginall')\r\n          .then(response => response.json())\r\n          .then(json => {\r\n            \r\n            this.setState({bdd: json})\r\n            \r\n          })\r\n      }\r\n\r\n     \r\n\r\n    render() {\r\n        return (\r\n            <html>\r\n                <Row>  \r\n                    <Col>\r\n                        <div class=\"hautpage\">\r\n                            <NavigationAutres />\r\n                        </div> \r\n                    </Col> \r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <form onSubmit={this.handleSubmit}>\r\n                            <Container>\r\n                                <Col className=\"mt-5\">\r\n                                    <label style={{textAlign: \"center\", fontSize: 30, color:'white',marginTop:'10%',marginLeft:'33%',marginRight:'67%'}}>\r\n                                        Email :\r\n                                        <input type=\"text\" value={this.state.email} onChange={text => this.setState({email: text.target.value})} />\r\n                                    </label>\r\n                                </Col>\r\n                                <Col className=\"mt-5\">\r\n                                    <label style={{textAlign: \"center\", fontSize: 30, color:'white',marginTop:'4%',marginLeft:'33%',marginRight:'67%'}}>\r\n                                        Password :\r\n                                        <input type=\"password\" value={this.state.password} onChange={text => this.setState({password: text.target.value})} />\r\n                                    </label>\r\n                                    <br></br><br></br><br></br>\r\n                                    <input style={{textAlign: \"center\", fontSize: 45, color:'red',marginTop:'5%', marginLeft:'39%'}} type=\"submit\" value=\"Connexion\" />\r\n                                </Col>\r\n                            </Container>\r\n                        </form>  \r\n                    </Col>\r\n                </Row>     \r\n            </html>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Signin\r\n","import React from \"react\";\r\nimport NavigationAutres from \"../../components/NavigationAutres\";\r\n\r\nexport default function Jeu(){\r\n    return (\r\n        <html>\r\n            <div class=\"hautpage\">\r\n \r\n                <NavigationAutres />\r\n            </div>\r\n           \r\n        </html>\r\n\r\n    )\r\n}","import React from \"react\";\r\nimport NavigationAutres from \"../../components/NavigationAutres\";\r\nimport Col from 'react-bootstrap/Col'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Container from 'react-bootstrap/Container'\r\n\r\n\r\n\r\n\r\nclass Signin extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n       \r\n        this.state={\r\n            /*name:'flo',\r\n            surname:'zz',\r\n            pseudo:'zz',\r\n            email:'zz',\r\n            birthDate:'zz',\r\n            password:'zz',\r\n            confirmPassword:'zz',\r\n            gameCount:'0'*/\r\n            name:'',\r\n            surname:'',\r\n            pseudo:'',\r\n            email:'',\r\n            birthDate:'',\r\n            password:'',\r\n            confirmPassword:'',\r\n            gameCount:'0',\r\n            testsign:false\r\n        }\r\n        \r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n      }\r\n\r\n  \r\n\r\n    handleSubmit(event) {\r\n        \r\n\r\n        if(this.state.name === '' || this.state.surname === '' || this.state.pseudo === '' || this.state.birthDate === '' || this.state.email === '' || this.state.password === '' || this.state.confirmPassword === '' ){\r\n            alert(\"You forget to fill a field\")\r\n        }\r\n        \r\n        else if(this.state.email.includes('@') === false || this.state.email.includes('.') === false || this.state.email.length < 10) {\r\n            alert(\"insert a valid email address\")\r\n        }\r\n\r\n\r\n        else if(this.state.password !== this.state.confirmPassword){\r\n            let simpleAlertHandler = () => {\r\n                alert(\"Passwords didn't match !\");\r\n              };\r\n              simpleAlertHandler();\r\n              return;\r\n        }\r\n\r\n        else if(this.state.password.length<8 || this.state.password.match(/\\d+/) == null || this.state.password === this.state.password.toLowerCase()){\r\n            alert(\"password not hard enough\")\r\n        }\r\n\r\n        else{\r\n        /*console.log('Le nom a été soumis : ' + this.state.name);\r\n        console.log('Le prenom a été soumis : ' + this.state.surname);\r\n        console.log('Le pseudo a été soumis : ' + this.state.pseudo);\r\n        console.log('La date de naissance a été soumis : ' + this.state.birthDate);\r\n        console.log('Le mail a été soumis : ' + this.state.email);\r\n        console.log('Le password a été soumis : ' + this.state.password);\r\n        console.log('Le confirmPassword a été soumis : ' + this.state.confirmPassword);\r\n        console.log('Le gameCount a été soumis : ' + this.state.gameCount);\r\n        console.log(this.state)*/\r\n\r\n        event.preventDefault();\r\n        fetch('http://localhost:5000/sign',{\r\n             \r\n              method:'POST',\r\n              headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n                \"Access-Control-Allow-Origin\":\"true\"\r\n              },\r\n              body: JSON.stringify({\r\n                pseudo:this.state.pseudo,\r\n                name:this.state.name,\r\n                surname:this.state.surname,      \r\n                email:this.state.email,\r\n                birthDate:this.state.birthDate,\r\n                password:this.state.password,\r\n                gameCount:this.state.gameCount\r\n              }),\r\n              \r\n              \r\n            }).then(response => response.json())\r\n            .then(json => {\r\n                    console.log(json.message)\r\n                \r\n        \r\n                \r\n              }).catch((error) => {\r\n               \r\n                \r\n                \r\n                alert(\"Echec d'inscription'. Réessayez.\");\r\n                \r\n          });\r\n          alert(\"Inscription terminée !\")\r\n          window.location.href= \"https://president-online.netlify.app/\"\r\n          //window.location.href= \"http://localhost:3000/\"\r\n        };\r\n    }\r\n        \r\n      \r\n    \r\n\r\n\r\n    render() {\r\n        return (\r\n            <html>\r\n                <Row>  \r\n                    <Col>\r\n                        <div class=\"hautpage\">\r\n                            <NavigationAutres />\r\n                        </div> \r\n                    </Col> \r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <form onSubmit={this.handleSubmit}>\r\n                            <Container>\r\n                            <Row>\r\n                                <Col className=\"mt-5\">\r\n                                    <label style={{textAlign: \"center\", fontSize: 30, color:'white',marginTop:'15%',marginLeft:'15%'}}>\r\n                                        Name :\r\n                                        <input type=\"text\" value={this.state.name}  onChange={text => this.setState({name: text.target.value})} />\r\n                                    </label>\r\n                                </Col >\r\n                                <Col className=\"mt-5\">\r\n                                    <label style={{textAlign: \"center\", fontSize: 30, color:'white',marginTop:'15%',marginLeft:'10%'}}>\r\n                                        Surname :\r\n                                        <input type=\"text\" value={this.state.surname} onChange={text => this.setState({surname: text.target.value})} />\r\n                                    </label>\r\n                                </Col>\r\n                            </Row>\r\n                            \r\n                            <Row>\r\n                                <Col className=\"mt-5\">\r\n                                    <label style={{textAlign: \"center\", fontSize: 30, color:'white',marginTop:'5%',marginLeft:'15%'}}>\r\n                                    Pseudo :\r\n                                    <input type=\"text\" value={this.state.pseudo} onChange={text => this.setState({pseudo: text.target.value})} />\r\n                                    </label>\r\n                                </Col>\r\n                                <Col className=\"mt-5\">\r\n                                    <label style={{textAlign: \"center\", fontSize: 30, color:'white',marginTop:'5%',marginLeft:'15%',marginRight:'5%'}}>\r\n                                        Email :\r\n                                        <input type=\"text\" value={this.state.email} onChange={text => this.setState({email: text.target.value})} />\r\n                                    </label>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col className=\"mt-5\">\r\n                                    <label style={{textAlign: \"center\", fontSize: 30, color:'white',marginTop:'5%',marginLeft:'15%'}}>\r\n                                        Birthdate :\r\n                                        <input type=\"text\" value={this.state.birthDate} onChange={text => this.setState({birthDate: text.target.value})} />\r\n                                    </label>\r\n                                </Col>\r\n                                <Col>\r\n                                    <label style={{textAlign: \"center\", fontSize: 30, color:'white',marginTop:'14%',marginLeft:'10%'}}>\r\n                                        Password :\r\n                                        <input type=\"password\" value={this.state.password} secureTextEntry={true} style={{}} onChange={text => this.setState({password: text.target.value})} />\r\n                                    </label>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col className=\"mt-5\">\r\n                                    <label style={{textAlign: \"center\", fontSize: 30, color:'white',marginTop:'2%',marginLeft:'36%',marginRight:'40%'}}>\r\n                                        Confirm your password :\r\n                                        <input type=\"password\" value={this.state.confirmPassword} secureTextEntry={true} onChange={text => this.setState({confirmPassword: text.target.value})} />\r\n                                    </label>\r\n                                </Col>\r\n                            </Row>\r\n                            \r\n                            \r\n                            <input style={{textAlign: \"center\", fontSize: 35, color:'red',marginTop:'5%', marginLeft:'46%'}} type=\"submit\" value=\"S'inscrire\" />\r\n                            </Container> \r\n                        </form>  \r\n                    </Col>\r\n                </Row>   \r\n                 \r\n            </html>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Signin\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport \"./NavigationAutres.css\" \r\nimport Container from 'react-bootstrap/Container'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Row from 'react-bootstrap/Row'\r\n\r\n\r\n\r\nconst NavigationHisto =() => {\r\n    return (\r\n        <main>\r\n            <Container fluid=\"lg\"> \r\n                <Row>\r\n                    <Col md=\"auto\" style = {{\r\n                        border: '2px solid moccasin',\r\n                        borderRadius: '10px',\r\n                        backgroundColor: 'palegoldenrod'\r\n                        }}>\r\n                        <NavLink to=\"/\" exact className =\"hover\" activeClassName='nav-active'>\r\n                            <h1 style={{\r\n                                fontSize: 64,\r\n                                }}>Président Online</h1>\r\n                        </NavLink>\r\n                    </Col>\r\n                    <Col/>\r\n                    <Col/>\r\n                    <Col/>\r\n                    <Col md='auto'>\r\n\r\n                    {/* On déplacera le contenu de ce container par une fonction Auth qui, lors de la connexion affichera un bouton profil */}\r\n                        <Container fluid=\"lg\" style = {{ \r\n                            border: '2px solid moccasin',\r\n                            borderRadius: '10px',\r\n                            backgroundColor: 'palegoldenrod'\r\n                            }}>\r\n                            <Row className=\"justify-content-md-center\">\r\n                                <Col md={8}>\r\n                                    <h2 style={{textAlign: \"center\", fontSize: 32}}> More </h2>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col sm='auto'>\r\n                                    <NavLink to=\"/profile\" className =\"hover\" activeClassName='nav-active'> \r\n                                        <h4 style={{textAlign: \"center\", fontSize: 24}}>Profile</h4>\r\n                                    </NavLink>\r\n                                </Col>\r\n                                <Col/>\r\n                            </Row>\r\n                        </Container>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default NavigationHisto;","import React from \"react\";\r\nimport NavigationHisto from \"../../components/NavigationHisto\";\r\nimport Col from 'react-bootstrap/Col'\r\nimport Row from 'react-bootstrap/Row'\r\n//import Container from 'react-bootstrap/Container'\r\n//import ListItem from '@material-ui/core/ListItem';\r\n\r\nclass Historique extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n       \r\n        this.state={\r\n            id:localStorage.getItem('Pseudo'),\r\n            donnees:[],\r\n\r\n\r\n   \r\n        }\r\n      }\r\n      componentDidMount(){\r\n        \r\n        fetch(`http://localhost:5000/history/${this.state.id}`)\r\n          .then(response => response.json())\r\n          .then(json => {\r\n            this.setState({donnees: json})\r\n            \r\n            console.log(this.state.donnees)\r\n            \r\n            \r\n          })\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <html>\r\n                <Row>  \r\n                    <Col>\r\n                        <div class=\"hautpage\">\r\n                            <NavigationHisto />\r\n                        </div> \r\n                    </Col> \r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <h2 style={{textAlign: \"center\", fontSize: 50, color:'white',marginTop:'5%'}}> Games : </h2><br></br><br></br>\r\n                        {\r\n                            this.state.donnees.map((l, i) => (\r\n                                \r\n                                    <Col>\r\n                                        <h2 className=\"mt-5\" style={{color:'white',textAlign: \"center\"}}> Game of the {l.Date} : Position {l.Position} </h2>\r\n                                    </Col> \r\n                                \r\n                                \r\n                            \r\n                            ))\r\n                        }\r\n                    </Col>\r\n                    \r\n                </Row>     \r\n                    \r\n            </html>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Historique","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport \"./NavigationAutres.css\" \r\nimport Container from 'react-bootstrap/Container'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Row from 'react-bootstrap/Row'\r\n\r\n\r\n\r\nconst NavigationProfil =() => {\r\n    return (\r\n        <main>\r\n            <Container fluid=\"lg\"> \r\n                <Row>\r\n                    <Col md=\"auto\" style = {{\r\n                        border: '2px solid moccasin',\r\n                        borderRadius: '10px',\r\n                        backgroundColor: 'palegoldenrod'\r\n                        }}>\r\n                        <NavLink to=\"/\" exact className =\"hover\" activeClassName='nav-active'>\r\n                            <h1 style={{\r\n                                fontSize: 64,\r\n                                }}>Président Online</h1>\r\n                        </NavLink>\r\n                    </Col>\r\n                    <Col/>\r\n                    <Col/>\r\n                    <Col/>\r\n                    <Col md='auto'>\r\n\r\n                    {/* On déplacera le contenu de ce container par une fonction Auth qui, lors de la connexion affichera un bouton profil */}\r\n                        <Container fluid=\"lg\" style = {{ \r\n                            border: '2px solid moccasin',\r\n                            borderRadius: '10px',\r\n                            backgroundColor: 'palegoldenrod'\r\n                            }}>\r\n                            <Row className=\"justify-content-md-center\">\r\n                                <Col md={8}>\r\n                                    <h2 style={{textAlign: \"center\", fontSize: 32}}> More </h2>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col sm='auto'>\r\n                                    <NavLink to=\"/historique\" className =\"hover\" activeClassName='nav-active'> \r\n                                        <h4 style={{textAlign: \"center\", fontSize: 24}}>Historique</h4>\r\n                                    </NavLink>\r\n                                </Col>\r\n                                <Col/>\r\n                            </Row>\r\n                        </Container>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default NavigationProfil;","\r\nimport React from \"react\";\r\nimport NavigationProfil from \"../../components/NavigationProfil\";\r\nimport Col from 'react-bootstrap/Col'\r\nimport Row from 'react-bootstrap/Row'\r\n\r\nclass Profil extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n       \r\n        this.state={\r\n            /*name:'',\r\n            surname:'',\r\n            email:'',\r\n            pseudo:'Neshtai',\r\n            /*password:'',\r\n            winrate:'39 %',\r\n            victory:'214',\r\n            roundpresi:'107',\r\n            roundvp:'58',\r\n            roundvtdc:'137',\r\n            roundtdc:'72',*/\r\n            donneesprofil:'',\r\n            donneesstats:[],\r\n            gameAmount:'',\r\n            email:localStorage.getItem(\"Email\"),\r\n            pseudo:localStorage.getItem(\"Pseudo\")\r\n   \r\n        }\r\n      }\r\n\r\n    \r\n\r\n      async componentDidMount(){\r\n        await fetch(`http://localhost:5000/profil/${this.state.pseudo}`)\r\n          .then(response => response.json())\r\n          .then(json => {\r\n            this.setState({donneesprofil: json[0]})\r\n          })\r\n\r\n        await fetch(`http://localhost:5000/statistics/${this.state.pseudo}`)\r\n          .then(response => response.json())\r\n          .then(json => {\r\n            this.setState({donneesstats: json})\r\n          })\r\n        \r\n        let wins=0;\r\n        for(let item of this.state.donneesstats){\r\n            if(item.Position === 1){\r\n                wins++;\r\n            }\r\n        }\r\n        this.setState({playerWins: wins});\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <html>\r\n                <Row>  \r\n                    <Col>\r\n                        <div class=\"hautpage\">\r\n                            <NavigationProfil />\r\n                        </div> \r\n                    </Col> \r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <h2 style={{textAlign: \"center\", fontSize: 32, color:'white',marginTop:'10%'}}> Name : </h2>\r\n                        <h2 style={{textAlign: \"center\", fontSize: 25, color:'white'}}> {this.state.donneesprofil.Name} </h2><br></br>\r\n                        <h2 style={{textAlign: \"center\", fontSize: 32, color:'white'}}> Surname : </h2>\r\n                        <h2 style={{textAlign: \"center\", fontSize: 25, color:'white'}}> {this.state.donneesprofil.Surname} </h2><br></br>\r\n                        <h2 style={{textAlign: \"center\", fontSize: 32, color:'white'}}> Email : </h2>\r\n                        <h2 style={{textAlign: \"center\", fontSize: 25, color:'white'}}> {this.state.donneesprofil.Email} </h2><br></br>\r\n                        <h2 style={{textAlign: \"center\", fontSize: 32, color:'white'}}> Pseudo : </h2>\r\n                        <h2 style={{textAlign: \"center\", fontSize: 25, color:'white'}}> {this.state.donneesprofil.Pseudo} </h2><br></br>\r\n\r\n                    </Col>\r\n                    <Col>\r\n                        \r\n                        <h2 style={{textAlign: \"center\", fontSize: 32, color:'white', marginTop:'9%'}}> Games played : </h2>\r\n                        <h2 style={{textAlign: \"center\", fontSize: 25, color:'white'}}> {this.state.donneesstats.length} </h2><br></br>\r\n                        <h2 style={{textAlign: \"center\", fontSize: 32, color:'white', marginTop:'9%'}}> Wins : </h2>\r\n                        <h2 style={{textAlign: \"center\", fontSize: 25, color:'white'}}> {this.state.playerWins} </h2><br></br>\r\n                        <h2 style={{textAlign: \"center\", fontSize: 32, color:'white', marginTop:'9%'}}> Ratio : </h2>\r\n                        <h2 style={{textAlign: \"center\", fontSize: 25, color:'white'}}> {(this.state.playerWins/this.state.donneesstats.length).toFixed(2)} Win(s) per lose </h2><br></br>\r\n                    </Col>\r\n                    \r\n                </Row>     \r\n            </html>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Profil","import React, { Component } from 'react';\r\n\r\n/* ATTENTION , React est build pour find directement dans le dossier public, donc les images viennent du dossier /frontend/public/cartes/..*/\r\n\r\n\r\nclass Carte extends Component {\r\n\r\n\r\n    imageClick = () => {\r\n        console.log('clickclickboom')\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div id='divcards' key={this.props.index} style={this.props.style}>\r\n                {this.props.identity === 'usercards' ? \r\n                    <img src={'cartes/'+this.props.num+'.png'} alt={this.props.num} key={this.props.index} id={this.props.identity} onClick={() => this.props.action(this.props.num)}/> \r\n                    : \r\n                    <img src={'cartes/'+this.props.num+'.png'} alt={this.props.num} key={this.props.index} id={this.props.identity} />}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Carte;","import React, { Component } from \"react\";\r\nimport { Button, Row, Col, Container, Alert } from 'react-bootstrap';\r\nimport Carte from '../../components/Carte'\r\n// TODO : Faire une actualisation du pile\r\n\r\n\r\nclass Game extends Component {\r\n\r\n\r\n    /*********** Global Variables ***********/\r\n\r\n    state = {\r\n        /* Usefull variables*/\r\n        token: true,\r\n        selectedCard: [],\r\n        switcher: false,\r\n        errorMessage: { type: null, title: null, message: null, variant: null },\r\n\r\n        /* Test variable */\r\n        testChgPile: [5, 18],\r\n        testChgPile2: [13],\r\n\r\n        /* RAW DATA */\r\n        playersData: null,\r\n        data: null,\r\n\r\n        /* PLAYERS */\r\n        players: [],\r\n        player1: { pseudo: null, cards: [], set: false },\r\n        player2: { pseudo: null, cards: [], set: false },\r\n        player3: { pseudo: null, cards: [], set: false },\r\n        player4: { pseudo: null, cards: [], set: false },\r\n        player5: { pseudo: null, cards: [], set: false },\r\n\r\n        /* STYLE */\r\n        defStyle: { display: 'flex', justifyContent: 'center', alignItems: 'center' },\r\n        cardStyle: { border: '2px solid red', borderRadius: '10px', },\r\n\r\n        /* VISIBLE CARDS */\r\n        pile: [],\r\n        playerCard: [],\r\n\r\n        /* List of all card, refers to their .png */\r\n        cardList: {\r\n            ace: ['1', '14', '27', '40'],\r\n            two: ['2', '15', '28', '41'],\r\n            three: ['3', '16', '29', '42'],\r\n            four: ['4', '17', '30', '43'],\r\n            five: ['5', '18', '31', '44'],\r\n            six: ['6', '19', '32', '45'],\r\n            seven: ['7', '20', '33', '46'],\r\n            eight: ['8', '21', '34', '47'],\r\n            nine: ['9', '22', '35', '48'],\r\n            ten: ['10', '23', '36', '49'],\r\n            jack: ['11', '24', '37', '50'],\r\n            queen: ['12', '25', '38', '51'],\r\n            king: ['13', '26', '39', '52'],\r\n\r\n        }\r\n    }\r\n\r\n\r\n    /********************** Game Function **********************/\r\n\r\n    /***********  ***********/\r\n\r\n    whatCardIs = (num) => {\r\n        // RETURN -1 IF NOT\r\n        if (this.state.cardList.ace.indexOf(String(num)) !== -1) {\r\n            switch (this.state.cardList.ace.indexOf(String(num))) {\r\n                case 0: return '15:s';\r\n                case 1: return '15:h';\r\n                case 2: return '15:c';\r\n                case 3: return '15:d';\r\n                default: return 0;\r\n            }\r\n        } else if (this.state.cardList.two.indexOf(String(num)) !== -1) {\r\n            switch (this.state.cardList.two.indexOf(String(num))) {\r\n                case 0: return '20:s';\r\n                case 1: return '20:h';\r\n                case 2: return '20:c';\r\n                case 3: return '20:d';\r\n                default: return 0;\r\n            }\r\n        } else if (this.state.cardList.three.indexOf(String(num)) !== -1) {\r\n            switch (this.state.cardList.three.indexOf(String(num))) {\r\n                case 0: return '3:s';\r\n                case 1: return '3:h';\r\n                case 2: return '3:c';\r\n                case 3: return '3:d';\r\n                default: return 0;\r\n            }\r\n        } else if (this.state.cardList.four.indexOf(String(num)) !== -1) {\r\n            switch (this.state.cardList.four.indexOf(String(num))) {\r\n                case 0: return '4:s';\r\n                case 1: return '4:h';\r\n                case 2: return '4:c';\r\n                case 3: return '4:d';\r\n                default: return 0;\r\n            }\r\n        } else if (this.state.cardList.five.indexOf(String(num)) !== -1) {\r\n            switch (this.state.cardList.five.indexOf(String(num))) {\r\n                case 0: return '5:s';\r\n                case 1: return '5:h';\r\n                case 2: return '5:c';\r\n                case 3: return '5:d';\r\n                default: return 0;\r\n            }\r\n        } else if (this.state.cardList.six.indexOf(String(num)) !== -1) {\r\n            switch (this.state.cardList.six.indexOf(String(num))) {\r\n                case 0: return '6:s';\r\n                case 1: return '6:h';\r\n                case 2: return '6:c';\r\n                case 3: return '6:d';\r\n                default: return 0;\r\n            }\r\n        } else if (this.state.cardList.seven.indexOf(String(num)) !== -1) {\r\n            switch (this.state.cardList.seven.indexOf(String(num))) {\r\n                case 0: return '7:s';\r\n                case 1: return '7:h';\r\n                case 2: return '7:c';\r\n                case 3: return '7:d';\r\n                default: return 0;\r\n            }\r\n        } else if (this.state.cardList.eight.indexOf(String(num)) !== -1) {\r\n            switch (this.state.cardList.eight.indexOf(String(num))) {\r\n                case 0: return '8:s';\r\n                case 1: return '8:h';\r\n                case 2: return '8:c';\r\n                case 3: return '8:d';\r\n                default: return 0;\r\n            }\r\n        } else if (this.state.cardList.nine.indexOf(String(num)) !== -1) {\r\n            switch (this.state.cardList.ninr.indexOf(String(num))) {\r\n                case 0: return '9:s';\r\n                case 1: return '9:h';\r\n                case 2: return '9:c';\r\n                case 3: return '9:d';\r\n                default: return 0;\r\n            }\r\n        } else if (this.state.cardList.ten.indexOf(String(num)) !== -1) {\r\n            switch (this.state.cardList.ten.indexOf(String(num))) {\r\n                case 0: return '10:s';\r\n                case 1: return '10:h';\r\n                case 2: return '10:c';\r\n                case 3: return '10:d';\r\n                default: return 0;\r\n            }\r\n        } else if (this.state.cardList.jack.indexOf(String(num)) !== -1) {\r\n            switch (this.state.cardList.jack.indexOf(String(num))) {\r\n                case 0: return '11:s';\r\n                case 1: return '11:h';\r\n                case 2: return '11:c';\r\n                case 3: return '11:d';\r\n                default: return 0;\r\n            }\r\n        } else if (this.state.cardList.queen.indexOf(String(num)) !== -1) {\r\n            switch (this.state.cardList.queen.indexOf(String(num))) {\r\n                case 0: return '12:s';\r\n                case 1: return '12:h';\r\n                case 2: return '12:c';\r\n                case 3: return '12:d';\r\n                default: return 0;\r\n            }\r\n        } else if (this.state.cardList.king.indexOf(String(num)) !== -1) {\r\n            switch (this.state.cardList.king.indexOf(String(num))) {\r\n                case 0: return '13:s';\r\n                case 1: return '13:h';\r\n                case 2: return '13:c';\r\n                case 3: return '13:d';\r\n                default: return 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    \r\n\r\n\r\n    isRoundOver = (cards, cardsNum) =>{\r\n        if(cards.length === 4){\r\n            return true\r\n        } else if (cardsNum === 20){\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n    showCard = (card) => {\r\n        if (this.state.selectedCard.indexOf(card) === -1) {\r\n            this.setState(state => {\r\n                const selectedCard = state.selectedCard.concat(card)\r\n                return {\r\n                    selectedCard,\r\n                };\r\n            })\r\n        } else {\r\n            var selectedCard = [...this.state.selectedCard]\r\n            const index = this.state.selectedCard.indexOf(card);\r\n            selectedCard.splice(index, 1)\r\n            this.setState({ selectedCard: selectedCard })\r\n        }\r\n        return 0;\r\n    }\r\n\r\n   \r\n\r\n\r\n    generatePlayersData = () => {\r\n        const players = this.state.players\r\n        const p1 = this.state.player1\r\n        const p2 = this.state.player2\r\n        const p3 = this.state.player3\r\n        const p4 = this.state.player4\r\n        const p5 = this.state.player5\r\n        players.map(\r\n            (data, key) => {\r\n                if (key === 0) {\r\n                    if (p1.set === false) {\r\n                        const dataf = data.split('|')\r\n                        p1.pseudo = dataf[0]\r\n                        for (let i = 0; i < dataf[1]; i++) { p1.cards.push(0) }\r\n                        p1.set = true;\r\n                    }\r\n                } if (key === 1) {\r\n                    if (p2.set === false) {\r\n                        const dataf = data.split('|')\r\n                        p2.pseudo = dataf[0];\r\n                        for (let i = 0; i < dataf[1]; i++) { p2.cards.push(0) }\r\n                        p2.set = true;\r\n                    }\r\n                } if (key === 2) {\r\n                    if (p3.set === false) {\r\n                        const dataf = data.split('|')\r\n                        p3.pseudo = dataf[0];\r\n                        for (let i = 0; i < dataf[1]; i++) { p3.cards.push(0) }\r\n                        p3.set = true;\r\n                    }\r\n                } if (key === 3) {\r\n                    if (p4.set === false) {\r\n                        const dataf = data.split('|')\r\n                        p4.pseudo = dataf[0]\r\n                        for (let i = 0; i < dataf[1]; i++) { p4.cards.push(0) }\r\n                        p4.set = true;\r\n                    }\r\n                } if (key === 4) {\r\n                    if (p5.set === false) {\r\n                        const dataf = data.split('|')\r\n                        p5.pseudo = dataf[0]\r\n                        for (let i = 0; i < dataf[1]; i++) { p5.cards.push(0) }\r\n                        p5.set = true;\r\n                    }\r\n                }\r\n                return 0;\r\n            }\r\n        )\r\n        this.setState({ player1: p1, player2: p2, player3: p3, player4: p4, player5: p5 })\r\n    }\r\n\r\n\r\n    resetError = () => {\r\n        const error = { type: null, title: null, message: null, variant: null }\r\n        this.setState({ errorMessage: error })\r\n    }\r\n\r\n    pileTypeCard = () => {\r\n        const pile = this.state.pile\r\n        if (pile.length === 0) {\r\n            return -1\r\n        }\r\n        else {\r\n            const numPile = this.whatCardIs(pile[0]).split(':')\r\n            console.log(numPile[0])\r\n            if (numPile[0] === 0) {\r\n                return 10\r\n            }\r\n            else {\r\n                return Number(numPile[0])\r\n            }\r\n        }\r\n    }\r\n    sameSelectedCard = () => {\r\n        var selCard = this.state.selectedCard\r\n        var len = selCard.length\r\n        var prev1 = this.whatCardIs(selCard[0]).split(':')\r\n        var prev = prev1[0]\r\n        if (len === 1) {\r\n            return Number(prev)\r\n        }\r\n        else {\r\n\r\n            for (let i = 0; i < len; i++) {\r\n                console.log(i)\r\n                console.log(prev)\r\n                const actual = this.whatCardIs(selCard[i]).split(':')\r\n                console.log(actual[0])\r\n                console.log('--------------')\r\n                if (prev !== actual[0]) {\r\n                    return -1\r\n                }\r\n                prev = actual[0]\r\n            }\r\n            return Number(prev)\r\n        }\r\n    }\r\n\r\n    canHePlay = () => {\r\n        if (this.state.token === true) {\r\n            const actualPile = this.state.pile\r\n            //const playerCard = this.state.playerCard\r\n            const selCard = this.state.selectedCard\r\n            const ssc = this.sameSelectedCard()\r\n            const ptc = this.pileTypeCard()\r\n            console.log(ssc + ' : ' + ptc)\r\n            if (actualPile.length > selCard.length && ssc !== 20) {\r\n                const error = { type: 'rules', title: 'You cannot play this', message: 'You cannot play fewer cards than there are in the pile', variant: 'danger' }\r\n                this.setState({ errorMessage: error })\r\n\r\n            }\r\n            else if (ssc === -1 && ssc !== 20) {\r\n                const error = { type: 'rules', title: 'You cannot play this', message: 'You cannot play two cards of different value', variant: 'danger' }\r\n                this.setState({ errorMessage: error })\r\n            } else if (ssc < ptc && ssc !== 20) {\r\n                const error = { type: 'rules', title: 'You cannot play this', message: 'You cannot play one or more cards smaller than those in the pile', variant: 'danger' }\r\n                this.setState({ errorMessage: error })\r\n            }\r\n            else if (actualPile.length > selCard.length - 1 && ssc === 20) {\r\n                const error = { type: 'rules', title: 'You cannot play this', message: 'You need an extra 2 if you want to cut a series of 3 cards', variant: 'danger' }\r\n                this.setState({errorMessage : error })\r\n            }\r\n            else {\r\n\r\n                const message = { type: 'finish', title: 'You just played', message: 'Wait for your turn.', variant: 'success' }\r\n                this.setState({ errorMessage: message })\r\n\r\n                this.delSelectedCard()\r\n                this.changePile(selCard, ssc)\r\n            }\r\n\r\n        }\r\n        else {\r\n            const error = { type: 'Not your turn', title: 'You cant play now', message: 'Its not your turn, wait for it.', variant: '' }\r\n            this.setState({ errorMessage: error })\r\n        }\r\n\r\n    }\r\n\r\n    changePile = (newCards, newCardsNum) => {\r\n\r\n        if (this.isRoundOver(newCards, newCardsNum) === false) {\r\n            var sheesh = []\r\n            fetch('http://localhost:5000/potd/GameTest')\r\n            newCards.map((value, key) => {\r\n                const fetchmsg = 'http://localhost:5000/pots/GameTest/' + String(value)\r\n                sheesh.push(value)\r\n                fetch(fetchmsg)\r\n                return 0;\r\n            })\r\n\r\n            this.setState({ pile: sheesh })\r\n        }\r\n\r\n    }\r\n    playButton = () => {\r\n        return (\r\n            <div style={this.state.defStyle}>\r\n                <Button>Play selected cards</Button>\r\n            </div>\r\n        )\r\n    }\r\n    isThereErrorMessage = () => {\r\n        if (this.state.errorMessage.type === 'rules') {\r\n            return (\r\n                <Row style={this.state.defStyle}>\r\n                    <Alert variant={this.state.errorMessage.variant}>\r\n                        <Alert.Heading>{this.state.errorMessage.title}</Alert.Heading>\r\n                        {this.state.errorMessage.message}\r\n                        <br />Check the rules for more informations\r\n                    </Alert>\r\n                </Row>\r\n            )\r\n        } else if (this.state.errorMessage.type === 'finish') {\r\n            return (\r\n                <Row style={this.state.defStyle}>\r\n                    <Alert variant={this.state.errorMessage.variant} onClose={() => this.resetError()} dismissible>\r\n                        <Alert.Heading>{this.state.errorMessage.title}</Alert.Heading>\r\n                        {this.state.errorMessage.message}\r\n                    </Alert>\r\n                </Row>\r\n            )\r\n        }\r\n\r\n    }\r\n    isThere4Players = () => {\r\n        if (this.state.player4.pseudo !== null) {\r\n            return (\r\n                <div>\r\n                    <Row style={this.state.defStyle}>\r\n                        {\r\n                            this.state.player4.cards.map((value, key) => {\r\n                                return <Carte num={value} index={key} identity='othercards' />\r\n                            })}\r\n                    </Row>\r\n                    <br />\r\n                    <Row style={this.state.defStyle}>\r\n                        {this.state.player4.pseudo !== null ? <span style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>{this.state.player4.pseudo}</span> : <span></span>}\r\n                    </Row>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <span>Empty</span>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    isThere5Players = () => {\r\n        if (this.state.player5.pseudo !== null) {\r\n            return (\r\n                <div>\r\n                    <Row style={this.state.defStyle}>\r\n                        {\r\n                            this.state.player5.cards.map((value, key) => {\r\n                                return <Carte num={value} index={key} identity='othercards' />\r\n                            })}\r\n                    </Row>\r\n                    <br />\r\n                    <Row style={this.state.defStyle}>\r\n                        {this.state.player5.pseudo !== null ? <span style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>{this.state.player5.pseudo}</span> : <span></span>}\r\n                    </Row>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <span>Empty</span>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        // Requete backend pour savoir les cartes de l'utilisateur local\r\n        fetch(`http://localhost:5000/deck/GameTest/user1`)\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                this.setState({ data: json })\r\n                json.forEach(({ user, card }) => {\r\n                    this.setState(state => {\r\n                        const playerCard = state.playerCard.concat(card)\r\n                        return {\r\n                            playerCard,\r\n                        };\r\n                    })\r\n                })\r\n            }\r\n            )\r\n        // Requete backend pour avoir le nombre de carte des joueurs\r\n        fetch('http://localhost:5000/ccount/GameTest/user1')\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                this.setState({ playersData: json })\r\n                json.forEach(({ user, Ncards }) => {\r\n                    const passerelle = user + '|' + Ncards\r\n                    this.setState(state => {\r\n                        const players = state.players.concat(passerelle)\r\n                        return {\r\n                            players,\r\n                        };\r\n                    }, this.generatePlayersData)\r\n                })\r\n            })\r\n        // Requete backend pour la pile de carte au milieu\r\n        fetch('http://localhost:5000/pot/GameTest')\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                json.forEach(({ user, card }) => {\r\n                    this.setState(state => {\r\n                        const pile = state.pile.concat(card)\r\n                        return {\r\n                            pile,\r\n                        };\r\n                    })\r\n                })\r\n            })\r\n\r\n    }\r\n\r\n    delSelectedCard = () => {\r\n        const selCard = this.state.selectedCard\r\n        var userCard = this.state.playerCard\r\n        for (let i = 0; i < selCard.length; i++) {\r\n            const index = userCard.indexOf(selCard[i])\r\n            console.log(selCard[i])\r\n            const fetchmsg = 'http://localhost:5000/dcard/GameTest/user1/' + String(selCard[i])\r\n            console.log(fetchmsg)\r\n            fetch('http://localhost:5000/dcard/GameTest/user1/' + String(selCard[i]))\r\n            userCard.splice(index, 1)\r\n\r\n        }\r\n        this.setState({ playerCard: userCard, selectedCard: [] })\r\n    }\r\n    addusercard = () => {\r\n        const usercard = this.state.playerCard\r\n        const sheesh = [1, 14, 27, 40, 6, 19, 32, 45]\r\n        usercard.push(sheesh)\r\n        for (let i = 0; i < sheesh.length; i++) {\r\n            fetch('http://localhost:5000/icard/GameTest/user1/' + String(sheesh[i]))\r\n        }\r\n        this.setState({ playerCard: usercard })\r\n    }\r\n    closeAlert = () => {\r\n        this.setState({ showAlert: false })\r\n    }\r\n\r\n    componentDidUpdate() {\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div style={{\r\n                border: '1px solid black',\r\n                backgroundColor: '#5DAB51',\r\n\r\n            }}>\r\n                <Container fluid>\r\n                    <Row>\r\n                        <Col>\r\n                            {/* Rien */}\r\n                        </Col>\r\n                        <Col>\r\n                            <Container fluid >\r\n                                <Row style={this.state.defStyle}>\r\n                                    {\r\n                                        this.state.player1.cards.map((value, key) => {\r\n                                            return <Carte num={value} index={key} identity='othercards' />\r\n                                        })}\r\n                                </Row>\r\n                                <br />\r\n                                <Row style={this.state.defStyle}>\r\n                                    {this.state.player1.pseudo !== null ? <span style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>{this.state.player1.pseudo}</span> : <span></span>}\r\n                                </Row>\r\n                            </Container>\r\n                        </Col>\r\n                        <Col>\r\n                            {/* Rien */}\r\n                        </Col>\r\n                    </Row>\r\n                    <br />\r\n                    <br />\r\n                    <Row>\r\n                        <Col>\r\n                            <Row style={this.state.defStyle}>\r\n                                {\r\n                                    this.state.player2.cards.map((value, key) => {\r\n                                        return <Carte num={value} index={key} identity='othercards' />\r\n                                    })}\r\n                            </Row>\r\n                            <br />\r\n                            <Row style={this.state.defStyle}>\r\n                                {this.state.player2.pseudo !== null ? <span style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>{this.state.player2.pseudo}</span> : <span></span>}\r\n                            </Row>\r\n\r\n                        </Col>\r\n                        <Col style={{ border: '2px solid red', borderRadius: '10px', }}>\r\n                            <Row style={this.state.defStyle}>\r\n                                {this.state.switcher === true ? <span id={String(this.state.switcher)}>Pile</span> : <span id={String(this.state.switcher)}>Pile</span>}\r\n                            </Row>\r\n                            <Row style={this.state.defStyle}>\r\n                                {\r\n                                    this.state.pile === [] ? <span>VIDE</span> : this.state.pile.map((value, key) => {\r\n                                        return <Carte num={value} index={key} identity='cards' />\r\n                                    })\r\n                                }\r\n                            </Row>\r\n                            <br />\r\n                            <Row>\r\n\r\n                            </Row>\r\n                        </Col>\r\n                        <Col>\r\n                            <Row style={this.state.defStyle}>\r\n                                {\r\n                                    this.state.player3.cards.map((value, key) => {\r\n                                        return <Carte num={value} index={key} identity='othercards' />\r\n                                    })}\r\n                            </Row>\r\n                            <br />\r\n                            <Row style={this.state.defStyle}>\r\n                                {this.state.player3.pseudo !== null ? <span style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>{this.state.player3.pseudo}</span> : <span></span>}\r\n                            </Row>\r\n                        </Col>\r\n                    </Row>\r\n                    <br />\r\n                    <br />\r\n                    <Row>\r\n                        <Col>\r\n                            {this.isThere4Players()}\r\n                        </Col>\r\n                        <Col>\r\n                            {this.isThereErrorMessage()}\r\n                        </Col>\r\n                        <Col>\r\n                            {this.isThere5Players()}\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n                <br />\r\n                <br />\r\n                <Container fluid>\r\n                    <Row>\r\n                        <Col style={this.state.defStyle}><Button onClick={() => console.log(this.addusercard())} block>pass</Button></Col>\r\n                        <Col style={this.state.defStyle}>\r\n                            {\r\n                                this.state.playerCard.map((value, index) => {\r\n                                    if (this.state.selectedCard.indexOf(value) !== -1) {\r\n                                        return <Carte num={value} index={index} identity='usercards' action={this.showCard} style={this.state.cardStyle} />;\r\n                                    } else {\r\n                                        return <Carte num={value} index={index} identity='usercards' action={this.showCard} />;\r\n                                    }\r\n                                })\r\n                            }\r\n                        </Col>\r\n                        {this.state.selectedCard.length > 0 ? <Col style={this.state.defStyle}><Button onClick={() => this.canHePlay()} block>Play selected cards</Button></Col> : <Col style={this.state.defStyle}><Button variant=\"secondary\" onClick={() => console.log(this.state.pile)} block disabled>Play selected cards</Button></Col>}\r\n\r\n                    </Row>\r\n                </Container>\r\n                <br />\r\n                <br />\r\n                <br />\r\n\r\n                <div></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Game;\r\n\r\n\r\n\r\n\r\n/*{\r\n            ace :   '1:14:27:40' ,\r\n            two:    '2:15:28:41',\r\n            three:  '3:16:29:42',\r\n            four:   '4:17:30:43',\r\n            five:   '5:18:31:44',\r\n            six:    '6:19:32:45',\r\n            seven:  '7:20:33:46',\r\n            eight:  '8:21:34:47',\r\n            nine:   '9:22:35:48',\r\n            ten:    '10:23:36:49',\r\n            jack:   '11:24:37:50',\r\n            queen:  '12:25:38:51',\r\n            king:   '13:26:39:52',\r\n\r\n            } */\r\n","import React, {Component} from \"react\";\r\n/*import Navbar from './Navbar/navbar';\r\nimport background from './Navbar/images/fond.png';*/\r\nimport Navigation from \"./components/Navigation\";\r\nimport Login from \"./pages/Login/Login\";\r\nimport Jeu from \"./pages/Jeu/Jeu\";\r\nimport Signin from \"./pages/Signin/Signin\";\r\nimport Rules from \"./pages/Rules/Rules\";\r\nimport {Redirect, Route, Switch} from 'react-router-dom';\r\nimport './App.css'\r\nimport HowTo from \"./pages/Howto/Howto\"\r\nimport Historique from \"./pages/Profil/Historique\";\r\nimport Profil from \"./pages/Profil/Profil\";\r\nimport CreateGame from \"./pages/CreateGame/CreateGame\";\r\nimport Game from \"./pages/Game/Game\"\r\n\r\n\r\nclass App extends Component {\r\n  state = {\r\n    data: null,\r\n    actualPage: 'home',\r\n    pseudo: 'testPseudo'\r\n  };\r\n\r\n  \r\n  pageStateSwitch = ( page ) => {\r\n        \r\n        this.setState({actualPage: page})\r\n  }\r\n\r\n  \r\n\r\n  render() {\r\n    return ( \r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <Navigation\r\n            actualPage={this.state.actualPage} \r\n            action = {this.pageSwitch}\r\n            actionSwitchPage = {this.pageStateSwitch}\r\n          />\r\n        </Route>\r\n        <Route exact path=\"/login\">\r\n          <Login/>\r\n        </Route>\r\n        <Route exact path=\"/profile\">\r\n          <Profil/>\r\n        </Route>\r\n        <Route exact path=\"/historique\">\r\n          <Historique/>\r\n        </Route>\r\n        <Route exact path=\"/jeu\">\r\n          <Jeu/>\r\n        </Route>\r\n        <Route exact path=\"/signin\">\r\n          <Signin/>\r\n        </Route>\r\n        <Route exact path=\"/rules\">\r\n          <Rules/>\r\n        </Route>\r\n        <Route exact path=\"/howto\">\r\n          <HowTo/>\r\n        </Route>\r\n        <Route exact path=\"/creategame\">\r\n          <CreateGame/>\r\n        </Route>\r\n        <Route exact path='/game'>\r\n          <Game/>\r\n        </Route>\r\n        <Redirect to=\"/\" />\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","export default __webpack_public_path__ + \"static/media/bg_dark.44371d27.webp\";","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport background from './img/bg_dark.webp'\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <div style={{\r\n    backgroundImage: `url(${background})`,\r\n    height: '100%',\r\n    margin: 0,\r\n    backgroundPosition: 'center',\r\n    backgroundRepeat: 'repeat',\r\n  }}>\r\n    <Router>\r\n      <div>\r\n        <App />\r\n      </div>\r\n    </Router>\r\n  </div>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}